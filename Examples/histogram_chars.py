'''
Создайте программу для лингвистов, которая будет инвертировать полученный
словарь. То есть в качестве ключа будет частота, а в качестве значения —
список символов с этой частотой. Вам нужно реаллизовать:
1. получить текст и создать из него оригинальный словарь частот;
2. создать новый словарь и заполнить его данными из оригинального
словаря частот, используя количество повторов в качестве ключей, а
буквы — в качестве значений, добавляя их в список для хранения.
'''

# Функция для создания словаря частот символов
def histogram(string):
    sym_dict = dict() # Инициализируем пустой словарь для частот
    for sym in string:
        if sym in sym_dict:  # Если символ уже есть в словаре, увеличиваем его частоту
            sym_dict[sym] += 1 
        else:
            sym_dict[sym] = 1 # Если символа нет в словаре, добавляем его с частотой 1
    return sym_dict

# Функция для инвертирования словаря частот
def invert_dict(d):
    inv = dict() # Инициализируем пустой словарь для инвертированных данных
    for key in d:
        val = d[key]
        if val not in inv:  # Если частота еще не встречалась, создаем новый список
            inv[val] = [key]
        else:
            inv[val].append(key)  # Если частота уже есть в словаре, добавляем символ в существующий список
    return inv



text = input('Введите текст: ')
hist = histogram(text)                      # Создаем словарь частот
print('Оригинальный словарь частот:')       # Выводим оригинальный словарь частот
for i_sym in sorted(hist.keys()):
    print(i_sym, ':', hist[i_sym])

inv_hist = invert_dict(hist)                # Создаем инвертированный словарь частот
print('\nИнвертированный словарь частот:')  # Выводим инвертированный словарь частот
for i_sym in sorted(inv_hist.keys()):
    print(i_sym, ':', inv_hist[i_sym])